apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

// 这里添加下面两行代码。
//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'

//apply plugin: 'com.novoda.bintray-release'

apply plugin: 'com.github.dcendents.android-maven'
group='com.wugx.autils' // ××××代表你github名字

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//
//    implementation rootProject.ext.dependencies["butterknife"]
//    //view
//    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
//        exclude module: 'support-annotations'
//    }

    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    //test
//    debugImplementation rootProject.ext.dependencies["canary-debug"]
//    releaseImplementation rootProject.ext.dependencies["canary-release"]
//    testImplementation rootProject.ext.dependencies["canary-release"]

    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]

    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["utilcode"]

    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]

    implementation rootProject.ext.dependencies["loadsir"]
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    implementation rootProject.ext.dependencies["SmartRefreshHeader"]
    implementation rootProject.ext.dependencies["tablayout"]

    implementation rootProject.ext.dependencies["zxing"]

    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["dialog"]
    implementation rootProject.ext.dependencies["dialog-commons"]

    //okHttp3
    implementation rootProject.ext.dependencies["okhttp3"]
    implementation rootProject.ext.dependencies["okhttp3-logging"]
    //rxJava2
    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["rxandroid2"]
    implementation rootProject.ext.dependencies["rxlifecycle2"]
    implementation rootProject.ext.dependencies["rxlifecycle2-components"]

    //retrofit2
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    implementation rootProject.ext.dependencies["retrofit-converter-gson"]
}

/** *****************************************************************************************************/
/** upload bintray Configuration**/
apply plugin: 'com.novoda.bintray-release'//添加
//github home page
def siteUrl = 'https://github.com/badjone/AUtils'
publish {
    repoName = 'maven'//远程仓库名字,不指明，默认是上传到maven
    userOrg = 'badjone654987'//bintray.com的用户名
    groupId = 'com.wugx'//jcenter上的路径
    artifactId = 'autils'//项目名称
    publishVersion = '1.0.6'//版本号
    desc = 'android utils'//描述，不重要
    website = siteUrl//项目主页
}
tasks.withType(Javadoc) {//防止编码问题
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

//上传cmd
//gradlew clean generatePomFileForReleasePublication build bintrayUpload -PbintrayUser=Your_Bintray_Name -PbintrayKey=Your_Bintray_Key -PdryRun=false

